version: '3.5'

services:
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kafka-zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ADVERTISED_HOST_NAME: 'kafka'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper
  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper
  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper
  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

#  mongodb:
#    image: mongo
#    container_name: mongo
#    ports:
#      - '27017:27017'
#    volumes:
#    - ./mongo:/mongo
  fastapi:
    container_name: fastapi
    build: .
    ports:
      - ${FASTAPI_PORT}:${FASTAPI_PORT}
    env_file:
      - .env
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5

  jupyter-python:
    container_name: jupyter-python
    image: python:3.9-slim-buster
    command: bash -c 'pip install install kafka-python==2.0.2 &&
                      pip install jupyter clickhouse-driver &&
                      jupyter nbconvert --clear-output --inplace /data/clickhouse_tests.ipynb &&
                      jupyter notebook --port=8888 --no-browser --ip=0.0.0.0 --allow-root'
    volumes:
      - ./clickhouse/data/clickhouse_tests.ipynb:/data/clickhouse_tests.ipynb
    ports:
      - '8888:8888'
    depends_on:
      - kafka
      - kafka-zookeeper
      - fastapi
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
